---
# tasks file for terraform
#
#

- name: "Read public key for ssh"
  set_fact:
    ssh_public_key: "{{ lookup('file', '{{ ssh_public_key_file }}') }}"
  tags: deploy, generate_hcl

- name: Ensures terraform dirs exists
  file:
    path: "{{ hcl_deploy_path }}/{{ inventory_hostname }}"
    state: directory
  delegate_to: terraform_node
  tags: deploy, generate_hcl

- name: "Deploy terraform files"
  template:
    src: terraform-vm.tf.j2
    dest: "{{ hcl_deploy_path }}/{{ inventory_hostname }}/{{ inventory_hostname }}.tf"
  delegate_to: terraform_node
  register: terraform_status
  tags: deploy, generate_hcl

- name: "Terraform destroy VMs"
  terraform:
    project_path: "{{ hcl_deploy_path }}/{{ inventory_hostname }}"
    force_init: true
    state: absent
  delegate_to: terraform_node
  when: terraform_status is undefined or terraform_status.changed
  tags: deploy, destroy

- name: "Terraform apply VMs"
  terraform:
    project_path: "{{ hcl_deploy_path }}/{{ inventory_hostname }}"
    force_init: true
    state: present
  delegate_to: terraform_node
  tags: deploy, apply
