---

- name: "Setup machine hostname"
  hostname:
    name: "{{ inventory_hostname }}"

# Gather up all interfaces
- name: get available devices
  find:
    paths: /sys/class/net/
    excludes: "lo"
    file_type: any
  register: interfaces_symlinks

- name: get source path for available devices
  stat:
    path: "{{ item.path }}"
  register: interfaces_paths
  with_items: "{{ interfaces_symlinks.files | sort(attribute='path') }}"

- set_fact:
    interfaces: []

- set_fact:
    interfaces: "{{ interfaces + [ item.stat.lnk_source.split('/')[-1] ] }}"
  when: "'virtual' not in item.stat.lnk_source"
  with_items: "{{ interfaces_paths.results }}"

- name: "Check if netplan is installed"
  package_facts:
    manager: "auto"

# Remove networks we do not manage in order to have control
- name: Remove unmanaged networks - Netplan
  shell: |
    find /etc/network/interfaces.d/ -type f -iname "ifcfg*" \
    {% for item in interfaces.files | sort(attribute='path') | list %} \
    ! -iname "*{{ item }}*" {% endfor %} -delete
  changed_when: no
  when: "'netplan.io' not in ansible_facts.packages"

- name: Remove unmanaged networks
  shell: |
    find /etc/netplan/ -type f \
    ! -iname "01-terrible-network.yaml"  -delete
  changed_when: no
  when: "'netplan.io' in ansible_facts.packages"

# Use traditional /etc/network/interfaces on Debian
- name: "Set connection setting files - Debian Family"
  blockinfile:
    path: "/etc/network/interfaces.d/ifcfg-managed-{{ network_name }}-{{ item.0 }}"
    mode: 0644
    block: |
      auto {{ item.0 }}:0
      iface {{ item.0 }}:0 inet static
          address {{ item.1.ip }}/24
          {% if item.1.get('default_route', False) %}
          gateway {{ item.1.gw }}
          {% endif %}
          dns-nameservers {% for dns in item.1.dns %}{{ dns }}{% endfor %}

    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.0 }}"
    create: yes
  register: interfaces_file
  with_together:
    - "{{ interfaces.files | sort(attribute='path') }}"
    - "{{ network_interfaces.values() | list }}"
  when: "'netplan.io' not in ansible_facts.packages"

- name: "Restart networking - apply configs"
  systemd:
    name: networking
    state: restarted
  async: 1
  poll: 0
  when:
    - "'netplan.io' not in ansible_facts.packages"
    - interfaces_file.changed

# Use netplan if present
- name: "Set connection setting files - Netplan"
  blockinfile:
    path: /etc/netplan/01-terrible-network.yaml
    mode: 0644
    block: |
      #
      network:
        version: 2
        ethernets:
          {{ item.0 }}:
            dhcp4: yes
            addresses: [{{ item.1.ip }}/24]
      {% if item.1.get('default_route', False) %}
            gateway4: {{ item.1.gw }}
      {% endif %}
            nameservers:
              addresses: [{% for dns in item.1.dns %}{{ dns }}{% if not loop.last %},{% endif %}{% endfor %}]
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.0 }}"
    create: yes
  register: netplan_file
  with_together:
    - "{{ interfaces.files | sort(attribute='path') }}"
    - "{{ network_interfaces.values() | list }}"
  when:
    - "'netplan.io' in ansible_facts.packages"
    - item.1.ip is defined

- name: "Restart networking - apply configs"
  command: "netplan apply -f"
  async: 1
  poll: 0
  when:
    - "'netplan.io' in ansible_facts.packages"
    - netplan_file.changed

...
