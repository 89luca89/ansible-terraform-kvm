---

# additional disks setup for terraform role
#
#         [ Start ]
#             |
#     [ assert variables ]
#     ┌-------┴---------┐
#     |  setup infere   |
#     |   variables     |
#     └-------┬---------┘
#     ┌-------┴---------┐
#     |  restore state  |
#     └-------┬---------┘
#     ┌-------┴---------┐
#     |  setup infere   |
#     |   variables     |
#     └-------┬---------┘
#     ┌-------┴-------------┐
#     |  generate TF files  |
#     |   deploy VMs        |
#     └-------┬-------------┘
#     ┌-------┴---------┐
#     | save new state  |
#     └-------┬---------┘
#     ┌-------┴--------------------┐
#     | execute post-deploy tasks: |
#     |    - Setup network         |
#     |    - Setup storage         |
#     |    - Update systems        |
#     └-------┬--------------------┘
#     ┌-------┴-----------------------┐
#     | Execute terrible-provisioners |
#     └-------┬-----------------------┘
#          [ End ]
# main task for terraform role
#
#

# -----------------------------------------------------------------------------
# Assert that all variables are well set.

- include_tasks:
    file: assert_vars.yml
    apply:
      tags:
        - always
  tags: always, validate
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Setup all the variables starting from existing ones.

- include_tasks:
    file: setup_vars.yml
    apply:
      tags:
        - always
  tags: always
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Setup the state.

- include_tasks:
    file: state_restore.yml
    apply:
      tags:
        - always
        - restore
  tags: always, restore
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Deploy the HCL files, use Terraform to deploy the infrastructure.

- include_tasks: deploy_vm.yml
  tags: deploy, destroy, apply, generate_hcl, purge
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Setup the state.
# We do this only if terraform actually did something, so only if "changed"
- include_tasks:
    file: state_save.yml
    apply:
      tags:
        - always
        - save
  tags: always, save
  when: >
    (terraform_shutdown is defined and terraform_shutdown.changed) or
    (terraform_destroy is defined and terraform_destroy.changed) or
    (terraform_command is defined and terraform_command.changed)
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Perform post-deploy tasks, such as users, networks and so on...

- include_tasks: post_deploy.yml
  tags: provision
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Perform custom terrible provisioners at the end of the post-deploy
- name: Execute post-deploy provisioners  # noqa 305
  shell: "{{ item }}"
  with_items: "{{ terrible_custom_provisioners }}"
  when: terrible_custom_provisioners is defined
  tags: terrible_provisioners
# -----------------------------------------------------------------------------

...
