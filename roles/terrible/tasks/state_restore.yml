---

# -----------------------------------------------------------------------------
# State management:
#   Check if we already have a state file, in case unpack it and use it
#   else just continue

- name: Check that a state file exists for current inventory
  stat:
    path: "{{ state_save_file }}"
  register: inventory_status
  delegate_to: localhost

- name: Ensure destination folder exists
  file:
    path: "{{ state_save_file | dirname }}"
    state: directory
    recurse: yes
    mode: 0755
  when:
    - hostvars['terraform_node']['ansible_connection'] != 'local'
    - inventory_status.stat.exists
  delegate_to: terraform_node

# If the terraform node is not local, the state should be first copied to it
# before unpacking it
- name: Send status to terraform_node
  copy:
    src: "{{ state_save_file }}"
    dest: "{{ state_save_file }}"
    mode: 0644
  run_once: yes
  when:
    - hostvars['terraform_node']['ansible_connection'] != 'local'
    - inventory_status.stat.exists
  delegate_to: terraform_node

- name: Unpack saved state to "{{ hcl_deploy_path | dirname }}"
  unarchive:
    src: "{{ state_save_file }}"
    dest: "{{ hcl_deploy_path | dirname }}"
    creates: "{{ hcl_deploy_path }}/.terraform"
    remote_src: yes
  run_once: yes
  when: inventory_status.stat.exists
  delegate_to: terraform_node
#
# -----------------------------------------------------------------------------

...
